<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="getAllSecretsFromVault" doc:id="86a793c5-4abc-47b4-a35e-8669f43e49a3" >
		<http:listener doc:name="Listener" doc:id="0347764f-8c3f-4b49-a784-32800b9df535" config-ref="HTTP_Listener_config" path="/getAllKeyValues-store" />
		<ee:transform doc:name="Prepare-Query-GetToken" doc:id="c5e1cf23-2e21-4b5e-93e8-5f593acc4d99" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0

output application/java

---

write({

"grant_type": "client_credentials",

"client_id": p('azure-clientID'),

"client_secret": p('azure-clientSecret'),

"resource": "https://vault.azure.net"

}, 'application/x-www-form-urlencoded')]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="getAzureToken" doc:id="ca1d4dd4-a192-414d-8f2c-71ec1f411665" config-ref="AzureKeyVaultRequest" path="${tenant_id}${azureAuthURL-uri}" >
			<http:headers ><![CDATA[#[output application/java
---
{
	"Content-type" : "application/x-www-form-urlencoded"
}]]]></http:headers>
		</http:request>
		<set-variable value="#[payload.access_token]" doc:name="keepTokenInVariable-token" doc:id="fce6c433-27e0-4e2f-bcf0-10787d6db8c9" variableName="token"/>
		<http:request method="GET" doc:name="getAllSecretKeys-FromAzure" doc:id="bf4fb880-9d73-40a9-8685-0aae01cd7234" config-ref="AzureAuthRequest" path="${vaultURL-allSecrets-uri}${vaultURL-allSecrets-queryParam}" sendCorrelationId="ALWAYS" correlationId="#[correlationId]">
			<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : 'Bearer '++ (vars.token default ''),
	"Content-type" : "application/json"
}]]]></http:headers>
		</http:request>
		<foreach doc:name="For Each" doc:id="33bce49b-bf46-4083-a3e1-f4d140910342" collection="#[%dw 2.0
output application/java
---
payload.value]">
			<set-variable value="#[%dw 2.0
import * from dw::core::Strings
---
substringAfterLast(payload.id, '/')]" doc:name="keyname" doc:id="cd3c7bef-6aca-4f69-ae3b-38fc8b47a75e" variableName="keyname" />
			<http:request method="GET" doc:name="getIndividualValues" doc:id="ed540d71-64fd-47b6-b021-1dbe1fd6d2a8" url='#[payload.id ++ p("vaultURL-queryParam")]'>
				<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : 'Bearer '++ (vars.token default ''),
	"Content-type" : "application/json"
}]]]></http:headers>
			</http:request>
			<ee:transform doc:name="MapKeyValues" doc:id="d673e524-dd26-4cd0-9354-527325e68dfe" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="keyvaluepairs" ><![CDATA[%dw 2.0
output application/json
---
if (vars.keyvaluepairs==null)
[{
	key: vars.keyname,
	value: payload.'value'
}]
else
(vars.keyvaluepairs default []) ++ [{key: vars.keyname,value: payload.'value'}]]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</foreach>
		<ee:transform doc:name="Final-KeyValue Pairs" doc:id="32d015b3-d891-4578-93fa-8f81028e0f01">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.keyvaluepairs]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="_Logger" doc:id="e791b562-f361-442b-acae-f993450792da" message="#[payload]" />
	</flow>
</mule>
